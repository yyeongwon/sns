
/**
 * 플러그인 클로저 추가
 * npm.github.node-gradle.node
 *
 */
plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "3.3.0"
}

group = "com.toyproject.sns"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
//	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation "org.springframework.boot:spring-boot-starter-web"
	compileOnly "org.projectlombok:lombok"
	runtimeOnly "org.postgresql:postgresql"
	annotationProcessor "org.projectlombok:lombok"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	version = '18.3.0'
	download = true
	nodeProjectDir = file("${project.projectDir}/front-end")
}

task npmBuild(type: NpmTask) {
	args = ['run', "build"]
}

task copyFrontEnd(type: Copy) {
	from "${project.projectDir}/front-end/static"
	into 'build/resources/main/static/.'
}

task cleanFrontEnd(type: Delete) {
	delete "${project.projectDir}/front-end/static", "${project.projectDir}/front-end/node_modules"
}

npmBuild.dependsOn npmInstall
copyFrontEnd.dependsOn npmBuild
compileJava.dependsOn copyFrontEnd

clean.dependsOn cleanFrontEnd